{"version":3,"sources":["images/logoBreakingBad.jpg","components/navbar.jsx","CharactersAPI/badcharAPI.js","components/characters.jsx","App.js","reportWebVitals.js","index.js"],"names":["doStyle","makeStyles","bgcolornav","background","imagewidth","width","searchBox","marginLeft","borderRadius","inputBox","color","fontSize","margin","Iconsearch","position","marginTop","Navbar","getName","classes","AppBar","className","Toolbar","src","Logo","alt","Box","InputBase","placeholder","autoFocus","onChange","event","target","value","root","fetchAPI","name","a","axios","get","characters","data","map","items","App","useState","text","setText","useData","useEffect","ans","console","log","getData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAAe,MAA0B,4C,wBCKnCA,EAAUC,YAAW,CACvBC,WAAY,CACRC,WAAY,WAEhBC,WAAY,CACRC,MAAO,SAEXC,UAAW,CACPC,WAAY,SACZC,aAAc,OACdL,WAAY,WAEhBM,SAAU,CACNC,MAAO,WACPC,SAAU,GACVC,OAAQ,UAGZC,WAAY,CACRC,SAAU,WACVP,WAAY,EACZQ,UAAW,KAqBJC,EAlBA,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACPC,EAAUlB,IAChB,OACI,cAACmB,EAAA,EAAD,CAAQC,UAAWF,EAAQhB,WAAYY,SAAS,SAAhD,SACI,eAACO,EAAA,EAAD,WACI,qBAAKD,UAAWF,EAAQd,WAAYkB,IAAKC,EAAMC,IAAI,SACnD,eAACC,EAAA,EAAD,CAAKL,UAAWF,EAAQZ,UAAxB,UACI,cAACmB,EAAA,EAAD,CAAKL,UAAWF,EAAQL,WAAxB,SACI,cAAC,IAAD,MAEJ,cAACa,EAAA,EAAD,CAAWC,YAAY,iBAAiBC,WAAS,EACjDC,SAAU,SAACC,GAAD,OAASb,EAAQa,EAAMC,OAAOC,QACxCd,QAAS,CAAEe,KAAMf,EAAQT,qB,iBCvChCyB,EAAQ,uCAAC,WAAMC,GAAN,SAAAC,EAAA,sEACPC,IAAMC,IAAN,6DAAgEH,IADzD,mFAAD,sDCWNI,G,OATE,SAAC,GACd,OADuB,EAARC,KAEPC,KAAI,SAAAC,GAEN,OAAO,gCAAgBA,MAAOA,SCwBzBC,EAxBH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaO,EAAb,KACAC,qBAAU,YACK,uCAAG,4BAAAZ,EAAA,sEACIF,EAASW,GADb,OACRI,EADQ,OAEdF,EAAQE,EAAIT,MACZU,QAAQC,IAAIF,GAHE,2CAAH,qDAKbG,KACC,CAACP,IAMJ,OACE,eAACpB,EAAA,EAAD,WACE,cAAC,EAAD,CAAQR,QAPE,SAAC4B,GACbC,EAAQD,GACRK,QAAQC,IAAIN,MAMV,cAAC,EAAD,CAAYL,KAAMA,QCfTa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c06caa1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoBreakingBad.9cb1ad48.jpg\";","import React from 'react'\r\nimport { AppBar, Toolbar, makeStyles, InputBase, Box } from '@material-ui/core';\r\nimport Logo from '../images/logoBreakingBad.jpg';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n//import { width } from '@material-ui/system';\r\nconst doStyle = makeStyles({\r\n    bgcolornav: {\r\n        background: '#0000ff'\r\n    },\r\n    imagewidth: {\r\n        width: '110px'\r\n    },\r\n    searchBox: {\r\n        marginLeft: '1000px',\r\n        borderRadius: '10px',\r\n        background: '#9999ff'\r\n    },\r\n    inputBox: {\r\n        color: ' #ffffff',\r\n        fontSize: 25,\r\n        margin: '0 50px'\r\n\r\n    },\r\n    Iconsearch: {\r\n        position: 'absolute',\r\n        marginLeft: 9,\r\n        marginTop: 9\r\n    }\r\n});\r\nconst Navbar = ({getName}) => {\r\n    const classes = doStyle();\r\n    return (\r\n        <AppBar className={classes.bgcolornav} position='static'>\r\n            <Toolbar>\r\n                <img className={classes.imagewidth} src={Logo} alt=\"logo\"></img>\r\n                <Box className={classes.searchBox}>\r\n                    <Box className={classes.Iconsearch}>\r\n                        <SearchIcon />\r\n                    </Box>\r\n                    <InputBase placeholder=\"Search by name\" autoFocus\r\n                    onChange={(event)=>getName(event.target.value)}\r\n                    classes={{ root: classes.inputBox }} />\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\nexport default Navbar;\r\n","import axios from 'axios';\r\n\r\nexport const fetchAPI=async(name)=>{\r\n  return await axios.get(`https://www.breakingbadapi.com/api/characters?name=${name}`);\r\n}\r\n","\r\n\r\nimport charDetailCard from './characterDetail';\r\n\r\nconst characters=({data})=>{\r\n    return (\r\n       data.map(items=>{\r\n          // console.log(items);\r\n          return <charDetailCard items={items}/>\r\n       })\r\n    )\r\n}\r\n\r\nexport default characters;","//import {useState,useEffect } from 'react';\n//import logo from './logo.svg';\n//import './App.css';\nimport Navbar from './components/navbar';\nimport { Box } from '@material-ui/core'\nimport { fetchAPI } from './CharactersAPI/badcharAPI';\nimport { useEffect, useState } from 'react';\nimport Characters from './components/characters';\nconst App = () => {\n  const [text, setText] = useState(\"\");\n  const [data, useData] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const ans = await fetchAPI(text);\n      useData(ans.data);\n      console.log(ans);\n    }\n    getData();\n  }, [text]);\n  const getName=(text)=>{\n    setText(text);\n    console.log(text);\n  }\n  //Here box will give us a div tag\n  return (\n    <Box>\n      <Navbar getName={getName} />\n      <Characters data={data}/>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}